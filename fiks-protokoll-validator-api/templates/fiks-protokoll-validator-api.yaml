apiVersion: apps/v1
kind: Deployment
metadata:
  name: fiks-protokoll-validator-api
  annotations:
    description: "API for denne applikasjonen som tester Fiks-IO protokoll"
    externalServices: "Fiks-io, eksterne arkiv-systemer"
  labels:
    app: fiks-protokoll-validator-api
    component: fiks-protokoll-validator-api
    criticality: "KRITISK"
spec:
  replicas: 1
  minReadySeconds: 10
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      component: fiks-protokoll-validator-api
  template:
    metadata:
      labels:
        component: fiks-protokoll-validator-api
    spec:
      containers:
        - name: fiks-protokoll-validator-api
          image: "{{ .Values.image.repository }}fiks-protokoll-validator-api:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8081
          env:
            - name: KUBERNETES_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: fiks-protokoll-validator-api-config
            - configMapRef:
                name: fiks-hosts-config
            - configMapRef:
                name: logstash-config    
            - secretRef:
                name: fiks-protokoll-validator-api-secret
        - name: fiks-protokoll-validator-api-proxy
          image: "{{ .Values.image.repository }}fiks-nginx-openshift-folkeregister:1.0.0"
          ports:
            - containerPort: 8080
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          volumeMounts:
            - name: nginx-conf-template
              readOnly: true
              mountPath: /etc/nginx/templates/nginx.conf.template
              subPath: nginx.conf.template
      volumes:
        - name: nginx-conf-template
          configMap:
            name: nginx-conf-template
---
kind: Service
apiVersion: v1
metadata:
  name: fiks-protokoll-validator-api-service
  labels:
    app: fiks-protokoll-validator-api
    tier: dotnet
spec:
  selector:
    component: fiks-protokoll-validator-api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf-template
data:
  nginx.conf.template: |-
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        keepalive_timeout  65;

        server {
            listen 8080;

            location /ready {
              access_log off;
              return 204;
            }
        }
    }
